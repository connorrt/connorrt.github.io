{"version":3,"sources":["webpack:///./src/components/HeaderSection.tsx","webpack:///./src/components/SectionContainer.tsx","webpack:///./src/components/LinksSection.tsx","webpack:///./src/components/ProjectsSection.tsx","webpack:///./src/components/TitleSection.tsx","webpack:///./src/pages/index.tsx","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js"],"names":["scrollTop","window","scrollTo","top","left","behavior","scrollProjects","innerHeight","scrollSocial","HeaderSection","react_default","a","createElement","className","styles","onClick","SectionContainer","props","title","content","LinksSection","_useState","useState","data","setData","_useState2","setError","useEffect","fetch","then","_ref","asyncToGenerator_default","regenerator_default","mark","_callee","res","resData","d","wrap","_context","prev","next","json","sent","public_repos","followers","stop","_x","apply","this","arguments","catch","err","console","error","displayData","Object","keys","length","react","href","components_SectionContainer","ProjectsSection","src","width","height","alt","TitleSection","id","indexPageQuery","seeMobile","open","location","IndexPage","render","_this$props$data$site","site","siteMetadata","name","tagline","components_HeaderSection","TitleSection_TitleSection","ProjectsSection_ProjectsSection","LinksSection_LinksSection","React","runtime","exports","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","value","makeInvokeMethod","fn","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","unwrapped","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","object","key","reverse","pop","skipTempReset","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","dP","__webpack_require__","f","FProto","nameRE","configurable","get","match","e","toObject","$keys","it","$export","core","fails","KEY","exec","exp","S","F","asyncGeneratorStep","gen","_next","_throw","args"],"mappings":"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","file":"component---src-pages-index-tsx-a9265e4d1f221b2e9e32.js","sourcesContent":["import React from \"react\";\nimport * as styles from \"../pages/Index.module.scss\";\n\nexport interface IHeaderContainerProps {\n    tabLeft: string\n    tabMiddle: string\n    tabRight: string\n}\n\nfunction scrollTop() {\n    window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: \"smooth\"\n    });\n}\n\nfunction scrollProjects() {\n    window.scrollTo({\n        top: window.innerHeight,\n        left: 0,\n        behavior: \"smooth\"\n    });\n}\n\nfunction scrollSocial() {\n    window.scrollTo({\n        top: 2 * window.innerHeight,\n        left: 0,\n        behavior: \"smooth\"\n    });\n}\n\nexport const HeaderSection = () => {\n    return (\n        <div className={styles.Header}>\n            <div className={styles.ButtonCenter}>\n                <button onClick={scrollTop} className={styles.Button}>{\"Top\"}</button>\n                <button onClick={scrollProjects} className={styles.Button}>{\"Projects\"}</button>\n                <button onClick={scrollSocial} className={styles.Button}>{\"Links\"}</button>\n            </div>\n        </div>\n    );\n};\n\nexport default HeaderSection;\n","import React from \"react\";\nimport * as styles from \"../pages/Index.module.scss\";\n\nexport interface ISectionContainerProps {\n    title: string\n    content: JSX.Element\n}\n\nconst SectionContainer: React.ComponentType<ISectionContainerProps> = (props: ISectionContainerProps): JSX.Element => {\n    return (\n\n        <div className={styles.Title}>\n            <h1>{props.title}</h1>\n            {props.content}\n        </div>\n    );\n};\n\nexport default SectionContainer;\n","import {useEffect, useState} from \"react\";\nimport * as React from \"react\";\nimport * as styles from \"../pages/Index.module.scss\";\nimport SectionContainer from \"./SectionContainer\";\n\ninterface IData {\n    public_repos: string\n    followers: string\n}\n\nexport const LinksSection: React.ComponentType = (): JSX.Element => {\n\n    const [data, setData] = useState({} as IData);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        fetch(`https://api.github.com/users/connorrt`).then(async (res) => {\n\n            const resData = await res.json();\n            const d = resData;\n            setData({\n                public_repos: d.public_repos,\n                followers: d.followers\n            });\n\n        }).catch(err => {\n            console.error(err);\n            setError(true);\n        });\n    }, []);\n\n    const displayData = Object.keys(data).length\n        ? (\n            <div className={styles.GithubAPIBar}>\n                <div className={styles.GithubAPIBox}>\n                    <h4>{data.public_repos}</h4>\n                    <p>Public Repositories</p>\n                </div>\n                <div className={styles.GithubAPIBox}>\n                    <h4>{data.followers}</h4>\n                    <p>Followers</p>\n                </div>\n            </div>\n        )\n        : <p>Something went wrong.</p>;\n\n    const content = (\n        <>\n            <div className={styles.Links}>\n            <a href={`https://github.com/connorrt`}>Github</a>\n            <span className={styles.vr}/>\n            <a href={`https://www.linkedin.com/in/connor-taylor-9ab483164`}>LinkedIn</a>\n            <span className={styles.vr}/>\n            <a href={`mailto:connorrt@email.sc.edu`}>Email</a>\n            </div>\n            <div className={styles.GithubAPI}>\n                <div className={styles.PageCenteredContainer}>\n                    <div className={styles.PageCentered}>\n                        <h3>Github Bragging Rights:</h3>\n                        {displayData}\n                    </div>\n                </div>\n            </div>\n        </>\n            );\n            return (\n            <SectionContainer\n                title=\"Links\"\n                content={content}\n            />\n            );\n            };\n","import * as React from \"react\";\nimport * as styles from \"../pages/Index.module.scss\";\nimport SectionContainer from \"./SectionContainer\";\n\nexport const ProjectsSection = () => {\n    const content = (\n        <div className={styles.PageCenteredContainer}>\n        <div className={styles.PageCentered}>\n            <h2>Black and Back</h2>\n            <div className={styles.GithubAPIBar}>\n                <hr/>\n            </div>\n            <div className={styles.ProjectBody}>\n                <img className={styles.ProjectImage} src={\"http://i64.tinypic.com/34qthlj.png\"} width={200}\n                     height={200} alt=\"\"/>\n                <p className={styles.ProjectBodyText}>\n                    BlackAndBack is a image-processing webapp that adds color to black and white photos\n                    using machine learning. The colorizing component uses Keras and Tensorflow and the\n                    server is based in Django. (We&nbsp;like&nbsp;Python.)\n                </p>\n            </div>\n            <div className={styles.ProjectButtonBar}>\n                <a href={\"http://blackandback.ml\"} className={styles.Button2}>Website</a>\n                <a href={\"https://github.com/SCCapstone/blackandback\"} className={styles.Button2}>Github</a>\n            </div>\n        </div>\n        </div>\n    );\n    return (\n        <SectionContainer\n            title=\"Projects\"\n            content={content}\n        />\n    );\n};\n","import * as React from \"react\";\nimport * as styles from \"../pages/Index.module.scss\";\nimport SectionContainer from \"./SectionContainer\";\n\nexport const TitleSection = () => {\n    const content = (\n        <>\n            <div className={styles.PageCenteredContainer}>\n                <div className={styles.PageCentered}>\n                    <img id=\"image\" className={styles.TitleImage}\n                         src=\"https://media.licdn.com/dms/image/C4D03AQESxzqryh2fhw/profile-displayphoto-shrink_200_200/0?e=1559174400&v=beta&t=ABtAJi2TdPMpnf4AqZ3DoQ8IYudOf8-ec2vjMSbynSs\"\n                         alt=\"It's me!\"/>\n                    <h2>Web Developer</h2>\n                </div>\n            </div>\n        </>\n    );\n\n    return (\n        <SectionContainer\n            title=\"Connor Taylor\"\n            content={content}\n        />\n    );\n};\n","import {graphql} from \"gatsby\";\nimport * as React from \"react\";\nimport HeaderSection from \"../components/HeaderSection\";\nimport {LinksSection} from \"../components/LinksSection\";\nimport {ProjectsSection} from \"../components/ProjectsSection\";\nimport SectionContainer from \"../components/SectionContainer\";\nimport {TitleSection} from \"../components/TitleSection\";\nimport * as styles from \"./Index.module.scss\";\n\ninterface IndexPageProps {\n    data: {\n        site: {\n            siteMetadata: {\n                name: string;\n                tagline: string;\n            },\n        }\n    };\n}\n\nexport const indexPageQuery = graphql`\n  query IndexPageQuery {\n    site {\n      siteMetadata {\n        name\n        tagline\n      }\n    }\n  }\n`;\n\nfunction seeMobile() {\n    window.open(window.location.href,\n        \"targetwindow\",\n        `width = 360, height = 640`\n    )\n    ;\n}\n\nexport default class IndexPage extends React.Component<IndexPageProps, {}> {\n\n    // public titleContent = ();\n\n    public render() {\n        const {\n            name,\n            tagline,\n\n        } = this.props.data.site.siteMetadata;\n        return (\n\n            <div className={styles.Container}>\n\n                <HeaderSection/>\n\n                <TitleSection/>\n\n                <ProjectsSection/>\n\n                <LinksSection/>\n\n                <div className={styles.Mobile}>\n                    <button onClick={seeMobile} className={styles.Button2}>Want to see a mobile orientation?</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}